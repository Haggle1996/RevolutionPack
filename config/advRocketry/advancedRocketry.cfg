# Configuration file

asteroid {
    # Multiplier changing how much total material is brought back from a mining mission
    D:miningMissionMultiplier=2.0

    # Multiplier changing how long a mining mission takes
    D:miningMissionTmeMultiplier=1.0

    # List of oredictionary names of ores allowed to spawn in asteriods
    S:standardOres <
        oreIron
        oreGold
        oreCopper
        oreTin
        oreRedstone
        oreRutile
        oreAluminum
        oreCadmium
        oreCalcite
        oreCertusQuartz
        oreChargedCertusQuartz
        oreDiamond
        oreDilithium
        oreTritanium
        oreFluorite
        oreIlmenite
        oreIndium
        oreLead
        oreMagnetite
        oreNickel
        orePitchblende
        orePlatinum
        oreRedstone
        oreSapphire
        oreSilver
        oreSulfur
        oreUranium
     >

    # True if the ores in standardOres should a be blacklist, false for whitelist
    B:standardOres_blacklist=false
}


biomes {
    I:alienForestBiomeId=91
    I:crystalChasmsBiomeId=95
    I:deepSwampBiomeId=96
    I:hotDryBiome=92
    I:marsh=97
    I:moonBiomeId=90
    I:oceanSpires=98
    I:spaceBiomeId=93
    I:stormLandsBiomeId=94
}


##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# UI locations can by set by clicking and dragging the middle mouse button ingame
##########################################################################################################

client {
    # If UI is not locked, the middle mouse can be used to drag certain AR UIs around the screen, positions are saved on hitting quit in the menu
    B:lockUI=true
    I:oxygenBarModeX=0
    I:oxygenBarModeY=1
    I:oxygenBarX=-8
    I:oxygenBarY=57
    I:suitPanelModeX=-1
    I:suitPanelModeY=-1
    I:suitPanelX=8
    I:suitPanelY=8
}


gasmining {
    # Multiplier for the amount of time gas collection missions take
    D:gasMissionMultiplier=1.0

    # list of fluid names that can be harvested as Gas [default: ]
    S:harvestableGasses <
     >
}


general {
    # If true, allows players being hurt due to lack of oxygen and allows effects from non-standard atmosphere types
    B:EnableAtmosphericEffects=true

    # Enables the laser drill machine
    B:EnableLaserDrill=true

    # Enables terraforming items and blocks
    B:EnableTerraforming=true

    # Power multiplier for the laser drill machine
    D:LaserDrillPowerMultiplier=1.0

    # Multiplier for the amount of energy produced by the microwave reciever
    D:MicrowaveRecieverMulitplier=1.0
    B:TerraformerRequiresFluids=true

    # If true players will respawn near beds on planets IF the spawn location is in a breathable atmosphere
    B:allowPlanetRespawn=false

    # EXPERIMENTAL: If set to true allows contruction and usage of the terraformer.  This is known to cause strange world generation after successful terraform
    B:allowTerraforming=false

    # How many blocks have the biome changed per tick.  Large numbers can slow the server down
    I:biomeUpdateSpeed=1

    # Multiplier for the build speed of the Rocket Builder (0.5 is twice as fast 2 is half as fast
    D:buildSpeedMultiplier=1.0

    # Should Electric Mushrooms be able to spawn lightning
    B:electricPlantsSpawnLightning=true

    # list entities which should not be affected by atmosphere properties [default: ]
    S:entityAtmBypass <
     >

    # Amount of force the jetpack provides with respect to gravity, 1 is the same acceleration as caused by Earth's gravity, 2 is 2x the acceleration caused by Earth's gravity, etc.  To make jetpack only work on low gravity planets, simply set it to a value less than 1
    D:jetPackForce=1.3

    # List of oredictionary names of ores allowed to be mined by the laser drill if surface drilling is disabled
    S:laserDrillOres <
        oreIron
        oreGold
        oreCopper
        oreTin
        oreRedstone
        oreDiamond
     >

    # True if the ores in laserDrillOres should be a blacklist, false for whitelist
    B:laserDrillOres_blacklist=false

    # If true the orbital laser will actually mine blocks on the planet below
    B:laserDrillPlanet=false

    # If true the boots only protect the player on planets with low gravity
    B:lowGravityBoots=false

    # If true the machines from AdvancedRocketry will produce things like plates/rods for other mods even if Advanced Rocketry itself does not use the material (This can increase load time)
    B:makeMaterialsForOtherMods=true

    # Maximum unique biomes per planet, -1 to disable
    I:maxBiomesPerPlanet=5

    # How many units of fuel should each Dilithium Crystal give to warp ships
    I:pointsPerDilithium=500
    B:resetPlanetsFromXML=false

    # Should the cutting machine be able to cut vanilla wood into planks
    B:sawMillCutVanillaWood=true

    # If true the Oxygen scrubbers require a consumable carbon collection cartridge
    B:scrubberRequiresCartrige=true

    # Amount of power per tick the solar generator should produce
    I:solarGeneratorMultiplier=1

    # Laser drill will not mine these dimension [default: ]
    S:spaceLaserDimIdBlackList <
     >

    # Dimension ID to use for space stations
    I:spaceStationId=-200

    # Maximum time in minutes that the spacesuit's internal buffer can store O2 for
    I:spaceSuitO2Buffer=30

    # Multplier for terraforming speed
    D:terraformMult=1.0

    # Mod:Blockname  for example "minecraft:chest" [default: ]
    S:torchBlocks <
     >

    # Amount of damage taken every second in a vacuum
    I:vacuumDamage=1

    # Multiplier for warp travel time
    D:warpTravelTime=1.0
}


"mod interaction" {
    # If true Galaciticcraft's air will be disabled entirely requiring use of Advanced Rocketry's Oxygen system on GC planets
    B:OverrideGCAir=true
}


"ore generation" {
    I:AluminumPerChunk=1
    I:AluminumPerClump=16
    I:CopperPerChunk=10
    I:CopperPerClump=6
    I:DilithiumPerChunk=1
    I:DilithiumPerChunkLuna=10
    I:DilithiumPerClump=16
    B:GenerateCopper=false
    B:GenerateRutile=false
    B:GenerateTin=false
    I:RutilePerChunk=6
    I:RutilePerClump=3
    I:TinPerChunk=10
    I:TinPerClump=6
    B:generateAluminum=false
    B:generateDilithium=false

    # List of oredictionary names of ores allowed to spawn in geodes
    S:geodeOres <
        oreIron
        oreGold
        oreCopper
        oreTin
        oreRedstone
     >

    # True if the ores in geodeOres should be a blacklist, false for whitelist
    B:geodeOres_blacklist=false
}


performance {
    # Advanced visual effects
    B:advancedVFX=true

    # BitMask: 0: no threading, radius based; 1: threading, radius based (EXP); 2: no threading volume based; 3: threading volume based (EXP)
    I:atmosphereCalculationMethod=0

    # Radius of the O2 vent.  if atmosphereCalculationMethod is 2 or 3 then max volume is calculated from this radius.  WARNING: larger numbers can lead to lag
    I:oxygenVentSize=32
}


planet {
    # List of Biomes to be blacklisted from spawning as BiomeIds, default is: river, sky, hell, void, alienForest [default: [7], [8], [9], [127], [91]]
    S:BlacklistedBiomes <
        7
        8
        9
        127
        91
     >

    # Biomes that only spawn on worlds with pressures over 125, will override blacklist.  Defaults: StormLands, DeepSwamp [default: [96], [94]]
    S:HighPressureBiomes <
        96
        94
     >

    # Some worlds have a chance of spawning single biomes contained in this list.  Defaults: deepSwamp, crystalChasms, alienForest, desert hills, mushroom island, extreme hills, ice plains [default: [96], [95], [91], [17], [14], [3], [12]]
    S:SingleBiomes <
        96
        95
        91
        17
        14
        3
        12
     >

    # Prevents any vanilla biomes from spawning on planets [default: false]
    B:blackListVanillaBiomes=false

    # Dimensions including and after this number are allowed to be made into planets [range: -127 ~ 8000, default: 2]
    I:minDimension=10

    rockets {
        B:autoRetroRockets=true
        D:fuelCapacityMultiplier=1.0
        B:rocketsRequireFuel=true
        D:thrustMultiplier=1.0
    }

    sealableblockwhitelist {
        S:general <
         >
    }

}


rockets {
    # Setting to false will disable the retrorockets that fire automatically on reentry on both player and automated rockets
    B:autoRetroRockets=true

    # Multiplier for per-tank capacity
    D:fuelCapacityMultiplier=1.0

    # Set to false if rockets should not require fuel to fly
    B:rocketsRequireFuel=true

    # Multiplier for per-engine thrust
    D:thrustMultiplier=1.0
}


sealableblockwhitelist {
    # Mod:Blockname  for example "minecraft:chest" [default: ]
    S:general <
     >
}


