# Configuration file

##########################################################################################################
# animals
#--------------------------------------------------------------------------------------------------------#
# Fully qualified class names include the full package declaration; e.g. com.draco18s.wildlife.entity.EntityGoat
# String lists have 1 entry per line with no commas. Eg:
#     S:AcceleratedAging <
#         Chicken
#         com.draco18s.wildlife.entity.EntityGoat
#      >
##########################################################################################################

animals {
    # List of animals with special age scaling.
    # Animal is looked up by class name, capitalize first letter.
    # You must pass a fully qualified class name for mod animals (JD Gui can help locate that).
    # Default age for all unspecified animals is 2.
    # 
    S:AcceleratedAging <
        Chicken
     >

    # Enables/disables goats [default: true]
    B:AddGoats=true

    # Enables/disables lizards [default: true]
    B:AddLizards=false

    # Lower's Chicken maximum age by this factor (maxAge = defaultMaxAge / ageFactor).
    #  [range: 0 ~ 100, default: 2]
    I:AgeFactorChicken=3

    # List of mod-added animals which should be treated as herbivores.
    # You must use fully qualified names.
    # Note that some animals may extend from vanilla classes; these will already be handled.
    # 
    S:AnimalIsHerbivore <
     >

    # This is a balance thing.  This causes skeletons to drop more bones, spiders to drop more slik, and animals to drop more meat, wool, and leather. [default: true]
    B:EnableIncreasedAnimalDrops=true

    # This is a global aging rate.  It causes animals to age more quickly or not at all.
    #  [range: 0 ~ 10, default: 1]
    I:GlobalAgeRate=1

    # How often herbivores will kill a block of grass or leaves, in ticks, reducing food supply.
    #  [range: 100 ~ 20000, default: 3000]
    I:HerbivoreEatFrequency=3000

    # How much 'older' herbivores get when there is no food nearby, in ticks.
    #  [range: 10 ~ 2000, default: 50]
    I:HerbivoreStarveFactor=50

    # Maximum age of animals, in seconds.
    # Note: Animals may have an accelerated aging rate, this value is the general-case value.
    #  [range: 5000 ~ 2000000, default: 24000]
    I:animalMaxAge=24000

    # How often cows (and mooshrooms) can be milked, in seconds.
    # Note: Cows can 'store' up to 3 buckets of milk, will not refill after having offspring,
    # and reabsorb the milk if they're starving.
    #  [range: 600 ~ 3600, default: 60]
    I:cowMilkFrequency=60

    # Raw leather (rawhide) requires curing on a tanning rack before it can be used.
    #  [default: true]
    B:doRawLeather=true
}


crops {
    # Enables or disables the slowdown of crop growth.
    # If enabled, base probability is 10% as frequent as vanilla (ten times slower).
    # Note: please disable Gany's Surface's snow accumulation, if it is
    # installed (mine results in a smoother variation between blocks).
    #  [default: true]
    B:EnableCropSlowing=true

    # Enables or disables the crop growth based on biome information (which is effected by seasons,
    # if enabled and ignored if slow crops is disabled). Most (vanilla) biomes have some semblance of a
    # growing season, though it will be harder to grow food in the cold and dry biomes. Growing plants
    # inside uses an effective temperature halfway closer to the ideal value.  For extreme biomes
    # this might be required!
    # If disabled, base slowdown probability is used instead.
    #  [default: true]
    B:EnableCropSlowingByBiome=true

    # Configures the worst possible growth rate for biome based crop growth.
    # In the worst possible conditions, the chance that crops will grow will not drop
    # below 100/(value + 10) %
    # Generally speaking this occurs in the frozen biomes during the winter, most notably Cold Taiga.
    # There should be no need for this value to exceed 16 for any biome other than Cold Taiga (50+)
    # and Cold Beach (20+).
    #  [range: 8 ~ 96, default: 16]
    I:SlowByBiomeLowerBound=16
}


plants {
    # Enables/disables auto-replanting of saplings, cactus, mushrooms, netherwart, and reeds.
    # Requried for automated tree death.
    # Kind of buggy and imperfect, feel free to disable as its largely a 'nice touch' feature.
    #  [default: true]
    B:autoPlantSaplings=true

    # Instantly kill any tree that is growing on non-standard materials.
    #  [default: false]
    B:secialTreeKill=false

    # Enables/disables tree tracking, which is required for automated tree death.
    # Will look for trees during worldgen and add autoplanted saplings to the tree list.
    #  [default: true]
    B:trackTrees=true

    # Determines how quickly trees die off.  Larger values mean a longer life.
    # 10 means that trees live on average 1 hour at default max age.
    #  [range: 1 ~ 10000, default: 100]
    I:treeAgeSpeed=100

    # How old trees can get before dying, in ticks.  This is effectively multiplied by the treeAgeSpeed.
    # Note: setting this below 3000 will cause some trees to die imediately after growing.
    #  [range: 100 ~ 1000000, default: 10000]
    I:treeMaxAge=20000
}


seasons {
    # Enable this to match cold beach temp with extreme hills temp. [default: false]
    B:AdjustStoneBeachTemp=false
    I:DimensionBlacklist <
        1
     >

    # Allows snow to pile up when it snows and melt away again. [default: true]
    B:EnableSnowAccumulation=false

    # Problems with frozen oceans? Try turning this on.
    # It will make any ice block that gets an update tick melt if the temp is > 0.2 (20F) [default: false]
    B:InstantlyUnfreezeIce=false

    # Enable to see baseline temp/rain modifiers in console. [default: false]
    B:LogWeather=false

    # Toggle for whether or not seasonal variation in weather should occur. [default: true]
    B:doSeasons=true

    # [WAILA] Set to true to use ᴼC and cm.  Temperatures are only approximately equivalent to the real world
    # at 10ᴼF = 0.1ᴼMC [default: false]
    B:metricUnits=false

    # How many Minecraft-Days it takes the moon to change phase ("1 week").
    # 1 is vanilla, 1 or 2 is good for SSP, 8+ is good for SMP.  Effects year length.
    #  [range: 1 ~ 32, default: 2]
    I:moonPhaseTime=1

    # Takes the place of the season modifier when seasons are off.
    #  [range: -2.0 ~ 2.0, default: 0.54641014]
    S:staticRainModifier=0.54641014

    # Takes the place of the season modifier when seasons are off.
    #  [range: -2.0 ~ 2.0, default: 0.0]
    S:staticTempModifier=0.0

    # If enabled, the week and year lengths are 1/10th of normal.
    # If enabled, the moon could change phase multiple times per night! [default: false]
    B:yearDebugEnable=false
}


